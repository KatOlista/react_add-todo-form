{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","utils.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","completed","title","userId","cn","TodoList","todos","map","username","regexForTodoTitle","preparedTodos","usersFromServer","find","App","useState","todoTitle","setTodoTitle","setUserId","setTodos","hasTitleError","setHasTitleError","hasSelectError","setHasSelectError","newTodoUser","newTodo","Math","max","action","method","onSubmit","event","preventDefault","prevState","htmlFor","placeholder","type","value","onChange","target","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de238e65.chunk.js","sourcesContent":["import { User } from '../../types';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }): JSX.Element | null => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n    userId,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn(\n        'TodoInfo', { 'TodoInfo--completed': completed },\n      )}\n    >\n\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user\n        && <UserInfo key={userId} user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoWithUser } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export const regexForTodoTitle = /[^a-zA-Zа-яА-Я0-9\\s]/g;\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './types/TodoWithUser';\nimport { regexForTodoTitle } from './utils';\n\nconst preparedTodos: TodoWithUser [] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(({ id }) => todo.userId === id) || null,\n}));\n\nexport const App: React.FC = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [todos, setTodos] = useState<TodoWithUser[]>(preparedTodos);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectError, setHasSelectError] = useState(false);\n\n  const newTodoUser = usersFromServer.find(({ id }) => id === userId);\n\n  const maxId = Math.max(...todos.map(todo => todo.id));\n\n  const newTodo = {\n    id: maxId + 1,\n    title: todoTitle,\n    userId,\n    completed: false,\n    user: newTodoUser || null,\n  };\n\n  const handleTitleChange\n  = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value.replace(regexForTodoTitle, ''));\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasSelectError(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (todoTitle && userId) {\n      setTodos((prevState => [...prevState, newTodo]));\n      setTodoTitle('');\n      setUserId(0);\n    }\n\n    setHasTitleError(!todoTitle);\n    setHasSelectError(!userId);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n          <input\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            id=\"userSelect\"\n            value={userId}\n            data-cy=\"userSelect\"\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasSelectError && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}